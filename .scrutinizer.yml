filter:
    paths: 
        - 'src/*'
        - 'tests/*'
        - 'config/*'
        
checks:
    php:
        line_length:
            max_length: '120'
        avoid_perl_style_comments: true
        avoid_todo_comments: true
        custom_coding_standard:
            git_repository: 'https://github.com/cakephp/cakephp-codesniffer'
            ruleset_path: CakePHP/ruleset.xml
        simplify_boolean_return: true
        return_doc_comments: true
        uppercase_constants: true
        use_self_instead_of_fqcn: true
        remove_extra_empty_lines: true
        return_doc_comment_if_not_inferrable: true
        properties_in_camelcaps: true
        prefer_while_loop_over_for_loop: true
        parameter_doc_comments: true
        optional_parameters_at_the_end: true
        fix_line_ending: true
        more_specific_types_in_doc_comments: true
        no_short_variable_names:
            minimum: '3'
        no_short_method_names:
            minimum: '3'
        no_long_variable_names:
            maximum: '20'
        no_goto: true
        newline_at_end_of_file: true
        naming_conventions:
            local_variable: '^[a-z][a-zA-Z0-9]*$'
            abstract_class_name: ^Abstract|Factory$
            utility_class_name: 'Utils?$'
            constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$'
            property_name: '^[a-z][a-zA-Z0-9]*$'
            method_name: '^(?:[a-z]|_[a-z]|__[a-z])[a-zA-Z0-9]*$'
            parameter_name: '^[a-z][a-zA-Z0-9]*$'
            interface_name: '^[A-Z][a-zA-Z0-9]*Interface$'
            type_name: '^[A-Z][a-zA-Z0-9]*$'
            exception_name: '^[A-Z][a-zA-Z0-9]*Exception$'
        encourage_single_quotes: true
        encourage_postdec_operator: true
        classes_in_camel_caps: true
        avoid_perl_style_comments: true
        avoid_multiple_statements_on_same_line: true
        no_underscore_prefix_in_methods: true
        parameters_in_camelcaps: true
        phpunit_assertions: true
        avoid_unnecessary_concatenation: true
        
coding_style:
    php:
        indentation:
            general:
                use_tabs: false
                size: 4
            switch:
                indent_case: true
        spaces:
            general:
                linefeed_character: newline
            before_parentheses:
                function_declaration: false
                closure_definition: true
                function_call: false
                if: true
                for: true
                while: true
                switch: true
                catch: true
                array_initializer: false
            around_operators:
                assignment: true
                logical: true
                equality: true
                relational: true
                bitwise: true
                additive: true
                multiplicative: true
                shift: true
                unary_additive: false
                concatenation: true
                negation: false
            before_left_brace:
                class: true
                function: true
                if: true
                else: true
                for: true
                while: true
                do: true
                switch: true
                try: true
                catch: true
                finally: true
            before_keywords:
                else: true
                while: true
                catch: true
                finally: true
            within:
                brackets: false
                array_initializer: false
                grouping: false
                function_call: false
                function_declaration: false
                if: false
                for: false
                while: false
                switch: false
                catch: false
                type_cast: false
            ternary_operator:
                before_condition: true
                after_condition: true
                before_alternative: true
                after_alternative: true
                in_short_version: false
            other:
                before_comma: false
                after_comma: true
                before_semicolon: false
                after_semicolon: true
                after_type_cast: false
        braces:
            classes_functions:
                class: new-line
                function: new-line
                closure: end-of-line
            if:
                opening: end-of-line
                always: true
                else_on_new_line: false
            for:
                opening: undefined
                always: true
            while:
                opening: undefined
                always: true
            do_while:
                opening: undefined
                always: true
                while_on_new_line: false
            switch:
                opening: undefined
            try:
                opening: undefined
                catch_on_new_line: false
                finally_on_new_line: false
        upper_lower_casing:
            keywords:
                general: undefined
            constants:
                true_false_null: undefined
                
tools:
    external_code_coverage:
        timeout: 600
        runs: 6
    php_code_coverage: false
    php_code_sniffer:
        config:
            standard: PSR4
        filter:
            paths: ['src/*', 'tests/*']
    php_loc:
        enabled: true
        excluded_dirs: ['tests/*']
    php_cpd:
        enabled: true
